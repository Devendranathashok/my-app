node{
    stage("SCM Checkout"){
	git credentialsId: 'gitcreds', url: 'https://github.com/Devendranathashok/my-app.git'
	}
	try {
    notifyStarted()

   stage('Maven Build'){
        def mvnHome = tool name: 'maven3', type: 'maven'
		sh "${mvnHome}/bin/mvn clean package"
		sh 'mv target/myweb*.war target/myweb.war'
   }

    notifySuccessful()
  } catch (e) {
    currentBuild.result = "FAILED"
    notifyFailed()
    throw e
  }
}

def notifyStarted() { emailext (
      subject: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
      body: """
STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':

Check console output at "${env.JOB_NAME} [${env.BUILD_NUMBER}]"

""",
      recipientProviders: [[$class: 'DevelopersRecipientProvider']]
    ) }

def notifySuccessful() { 
  emailext (
      subject: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
      body: """
SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':


        
Check console output at "${env.JOB_NAME} [${env.BUILD_NUMBER}]"

""",
      recipientProviders: [[$class: 'DevelopersRecipientProvider']]
    )
} 

def notifyFailed() {
	emailext (
      subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
      body: """
	  FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':


        
Check console output at "${env.JOB_NAME} [${env.BUILD_NUMBER}]"

""",
      recipientProviders: [[$class: 'DevelopersRecipientProvider']]
    )
}
    stage('Docker build')
	{
	sh 'docker build -t 192.168.58.135:8083/myweb:1.0.0 .'
	}
	stage('Docker push')
	{
	  sh "docker login http://192.168.58.135:8083 -u admin -p admin123"
          sh "docker push 192.168.58.135:8083/myweb:1.0.0"
	  }
	stage('Deploy to Kubernetes'){
		sshagent(['kubernetescreds']) {
		sh "scp -o StrictHostKeyChecking=no deployment.yaml vagrant@192.168.58.120:/home/vagrant/"
		try{
	     sh "ssh vagrant@192.168.58.120 kubectl create -f /home/vagrant/deployment.yaml"
	   }catch(ex){
	     sh "ssh vagrant@192.168.58.120 kubectl apply -f /home/vagrant/deployment.yaml"
	   }
   
	}
	}
	
}
	

